name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.13

    - name: Install dependencies
      run: uv sync --all-extras

    - name: Run ruff check
      run: uv run ruff check

    - name: Run ruff format check
      run: uv run ruff format --check

  type-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.13

    - name: Install dependencies
      run: uv sync --all-extras

    - name: Run mypy
      run: uv run mypy src/

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --all-extras

    - name: Run tests
      run: uv run pytest --cov=src --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  contract-validation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.13

    - name: Install dependencies
      run: uv sync --all-extras

    - name: Validate OpenAPI schema
      run: |
        if [ -f schemas/openapi.yaml ]; then
          uv run python -c "
          import yaml
          import json
          with open('schemas/openapi.yaml') as f:
              schema = yaml.safe_load(f)
          print('OpenAPI schema is valid YAML')
          "
        else
          echo "OpenAPI schema not found, skipping validation"
        fi

    - name: Run contract tests
      run: |
        if [ -d tests/contract ]; then
          uv run pytest tests/contract/ -v
        else
          echo "Contract tests not found, skipping"
        fi

  performance:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.13

    - name: Install dependencies
      run: uv sync --all-extras

    - name: Run SLO validation tests (measurement-only)
      run: |
        uv run pytest tests/performance/test_slo_validation.py -v --tb=short -m performance
      continue-on-error: true

    - name: Run performance benchmarks
      run: |
        uv run python examples/performance_benchmark.py > performance_results.txt 2>&1
      continue-on-error: true

    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: performance_results.txt
      if: always()

  build:
    runs-on: ubuntu-latest
    needs: [lint, type-check, test]
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.13

    - name: Install dependencies
      run: uv sync --all-extras

    - name: Build package
      run: uv build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
